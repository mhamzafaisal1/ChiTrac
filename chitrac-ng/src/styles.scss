@use '@angular/material' as mat;
@use './themes/chitrac';
@use './app/blanket-blaster/lane-common.scss';
@import 'bootstrap/dist/css/bootstrap.min.css';

@include mat.core();
// mat.$theme-ignore-duplication-warnings: true;
$theme-ignore-duplication-warnings: true;


//$theme: chitrac.$light-theme;
//$darkest: 60;
$darkest-dark-theme: 20;
$dark-theme:  chitrac.$dark-theme;
$light-theme: chitrac.$light-theme;

$testcolor2: mat.get-theme-color($light-theme, primary, 60);

@mixin create-dark-theme() {
  @include mat.all-component-themes($dark-theme);

}

@mixin create-light-theme() {
  @include mat.all-component-themes(chitrac.$light-theme);
}

:root {
  --theme-icon-invert: 0; /* default for light mode */
}

body.dark-theme {
  --theme-icon-invert: 1; /* full invert for dark mode */
}


.dark-theme {
  @include create-dark-theme();
  --mat-sidenav-container-shape: 0px; //unround the sidenav corners
  --mat-list-active-indicator-shape: 0px; //unround sidenav hover corners
  --theme-color-primary: #{mat.get-theme-color($dark-theme, primary)};
  --theme-color-primary-lightest: #{mat.get-theme-color($dark-theme, primary, 60)};
  --theme-color-primary-middle: #{mat.get-theme-color($dark-theme, primary, 40)};
  --theme-color-primary-darkest: #{mat.get-theme-color($dark-theme, primary, 20)};
  --theme-color-on-primary: #{mat.get-theme-color($dark-theme, on-primary)};
  --theme-color-secondary-middle: #{mat.get-theme-color($dark-theme, secondary, 40)};
  --theme-color-secondary-container: #{mat.get-theme-color($dark-theme, secondary-container)};
  --theme-color-on-secondary: #{mat.get-theme-color($dark-theme, on-secondary)};
  --theme-color-surface: #{mat.get-theme-color($dark-theme, surface)};
  --theme-color-surface-container: #{mat.get-theme-color($dark-theme, surface-container)};
  --theme-color-surface-bright: #{mat.get-theme-color($dark-theme, surface-bright)};
  --theme-color-on-surface-variant: #{mat.get-theme-color($dark-theme, on-surface-variant)};

  /* Direct theme color overrides*/
  --mat-sort-arrow-color: #{mat.get-theme-color($dark-theme, on-primary)};

  /*--mat-dialog-container-min-width: 350px;*/
}

.dark-theme .error-dialog {
  --mdc-dialog-container-color: #{mat.get-theme-color($dark-theme, error-container)};
  //--mdc-dialog-color: #{mat.get-theme-color($dark-theme, error-on-container)}; //unsure why this started causing issues, need to resolve and uncomment
}

.light-theme {
  @include create-light-theme();
  --mat-sidenav-container-shape: 0px; //unround the sidenav corners
  --mat-list-active-indicator-shape: 0px; //unround sidenav hover corners
  --theme-color-primary: #{mat.get-theme-color($light-theme, primary)};
  --theme-color-primary-lightest: #{mat.get-theme-color($light-theme, primary, 80)};
  --theme-color-primary-middle: #{mat.get-theme-color($light-theme, primary, 60)};
  --theme-color-primary-darkest: #{mat.get-theme-color($light-theme, primary, 40)};
  --theme-color-on-primary: #{mat.get-theme-color($light-theme, on-primary)};
  --theme-color-secondary-middle: #{mat.get-theme-color($light-theme, secondary, 70)};
  --theme-color-secondary-container: #{mat.get-theme-color($light-theme, secondary-container)};
  --theme-color-on-secondary: #{mat.get-theme-color($light-theme, on-secondary)};
  --theme-color-surface: #{mat.get-theme-color($light-theme, surface)};
  --theme-color-surface-container: #{mat.get-theme-color($light-theme, surface-container)};
  --theme-color-surface-bright: #{mat.get-theme-color($light-theme, surface-dim)};
  --theme-color-on-surface-variant: #{mat.get-theme-color($light-theme, on-surface-variant)};

  /* Direct theme color overrides*/
  --mat-sort-arrow-color: #{mat.get-theme-color($light-theme, on-primary)};

}

.light-theme .error-dialog {
  --mdc-dialog-container-color: #{mat.get-theme-color($light-theme, error-container)};
}


html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif;}
a {text-decoration: none; color:inherit;}

#OperatorConfigDialog {
  overflow: hidden;
}

/* Chrome, Safari, Edge, Opera */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Firefox */
input[type=number] {
  -moz-appearance: textfield;
}

/* Custom modal styling */
.custom-modal-panel .mat-dialog-container {
  border-radius: 12px;
  padding: 0;
  background-color: var(--background-color);
  color: var(--text-color);
}

.cdk-overlay-container {
  overflow-y: hidden !important;
}

body.cdk-global-scrollblock {
  overflow: hidden !important;
}

/* Performance Chart Dialog Styles */
.performance-chart-dialog {
  height: 100%;

  .mat-mdc-dialog-container {
    height: 100%;
    display: flex;
    flex-direction: column;
    padding: 0;
    border-radius: 8px;
    overflow: hidden;
  }

  .mat-mdc-dialog-surface {
    height: 100%;
    display: flex;
    flex-direction: column;
    border-radius: 8px;
    overflow: hidden;
  }
}


/* DEBUG: Outline all modal and fault history containers */
// .modal-wrapper,
// .container,
// .scroll-wrapper,
// .cdk-overlay-pane,
// .mat-dialog-container {
//   outline: 2px solid red !important;
//   overflow-x: visible !important;
//   min-width: 0 !important;
//   max-width: 100vw !important;
//   box-sizing: border-box !important;
// }

/* Hide vertical scrollbar for modal and carousel */
.modal-wrapper,
.carousel-container,
.cdk-overlay-pane,
.mat-dialog-container,
body,
html {
  overflow-y: hidden !important;
}

.modal-wrapper::-webkit-scrollbar,
.carousel-container::-webkit-scrollbar,
.cdk-overlay-pane::-webkit-scrollbar,
.mat-dialog-container::-webkit-scrollbar,
body::-webkit-scrollbar,
html::-webkit-scrollbar {
  display: none !important;
}

::ng-deep .performance-chart-dialog .mat-dialog-container {
  padding: 0;
  border-radius: 8px;
  overflow: hidden;
}


body.light-theme {
  --theme-icon-invert: 0;
}

body.dark-theme {
  --theme-icon-invert: 1;
}


.sidenav .mat-list-item mat-icon {
  margin-right: 0.5em;
}


